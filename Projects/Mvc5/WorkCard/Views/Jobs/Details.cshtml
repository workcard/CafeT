@model Web.Models.Job
@using CafeT.Text

@{
    ViewBag.Title = Model.Title;
}

<script type="text/javascript">
    $.get('@Url.Action("GetComments", "Jobs", new { id = Model.Id.ToString(), n=5})',
        function (data) {
            $('#comments-box').html(data);
        });
</script>
<script type="text/javascript">
    $.get('@Url.Action("GetLastestQuestions", "Jobs", new { id = Model.Id.ToString(), n=5})',
        function (data) {
            $('#questions-box').html(data);
        });
</script>
<script type="text/javascript">
    $.get('@Url.Action("GetIssues", "Jobs", new { id = Model.Id.ToString(), n=5})',
        function (data) {
            $('#issues-box').html(data);
        });
</script>
<script type="text/javascript">
    $.get('@Url.Action("GetLastestAppliers", "Jobs", new { id = Model.Id.ToString(), n=5})',
        function (data) {
            $('#appliers-box').html(data);
        });
</script>
<script>
            var dt = '@ViewBag.EndDate';
            var dateAr = dt.split('-');
            var newDate = dateAr[1] + '/' + dateAr[0] + '/' + dateAr[2];

            var end = new Date(dateAr[1] + '/' + dateAr[0] + '/' + dateAr[2]);

            var _second = 1000;
            var _minute = _second * 60;
            var _hour = _minute * 60;
            var _day = _hour * 24;
            var timer;

            function showRemaining() {
                var now = new Date();
                var distance = end - now;
                if (distance < 0) {
                    clearInterval(timer);
                    document.getElementById('countdown').innerHTML = 'Expried!';
                    //window.location.href = '/Account/Login';

                    return;
                }
                var days = Math.floor(distance / _day);
                var hours = Math.floor((distance % _day) / _hour);
                var minutes = Math.floor((distance % _hour) / _minute);
                var seconds = Math.floor((distance % _minute) / _second);

                //document.getElementById('countdown').innerHTML = days + 'days ';
                document.getElementById('countdown').innerHTML = hours + 'hrs ';
                document.getElementById('countdown').innerHTML += minutes + 'mins ';
                document.getElementById('countdown').innerHTML += seconds + 'secs';
            }

            timer = setInterval(showRemaining, 1000);
</script>


<div class="row">
    <div class="col-md-8">
        <h5>
            @Html.Raw(Model.Title)
            <span class="small badge badge-danger">@Model.Status</span>
        </h5>
        @Html.Raw("Lương: " + Model.Salary.Amout.ToReadable() + Model.Salary.Currency.ToString())
        @Html.Raw("Bắt đầu: " + Model.Start)
        @Html.Raw(" Hết hạn: " + Model.End.Value.ToShortDateString())
        <span id="countdown"></span>
        @Html.Partial("Jobs/_JobMenu", Model)
        <hr />
        <div class="row">
            @if (Model.Tags != null && Model.Tags.Length > 0)
        {
            foreach (string tag in Model.Tags)
            {
                if (tag.IsNullOrEmptyOrWhiteSpace())
                {
                    @Html.ActionLink(tag, "GetByTags", "Jobs", new { tag = tag }, null)
            }
        }
    }
        </div>
        <p>
            @Html.Raw(Model.Description)
            @Html.Raw(Model.Content)
        </p>
        @if (User.Identity.IsAuthenticated)
    {
        @Ajax.ActionLink("Hỏi", "AddQuestion", "Jobs",
                      new { JobId = Model.Id },
                      new AjaxOptions
                      {
                          UpdateTargetId = "AddQuestion",
                          HttpMethod = "Get",
                          InsertionMode = InsertionMode.InsertBefore
                      }, new { @class = "card-link" })

        @Ajax.ActionLink("+ Comment", "AddComment", "Jobs",
                      new { JobId = Model.Id },
                      new AjaxOptions
                      {
                          UpdateTargetId = "AddQuestion",
                          HttpMethod = "Get",
                          InsertionMode = InsertionMode.InsertBefore
                      }, new { @class = "card-link" })
        @Ajax.ActionLink("+ Issue", "AddIssue", "Jobs",
                      new { jobId = Model.Id },
                      new AjaxOptions
                      {
                          UpdateTargetId = "AddQuestion",
                          HttpMethod = "Get",
                          InsertionMode = InsertionMode.InsertBefore
                      }, new { @class = "card-link" })
}

        <div id="AddQuestion"></div>
        <div class="row">
            <div id="questions-box" class="col-md-6"></div>
            <div id="comments-box" class="col-md-6"></div>
        </div>
    </div>
    <div class="col-md-4">
        <div id="appliers-box"></div>
        <div id="issues-box"></div>
        
        <p>
            <div id="Update-@Model.Id.ToString()"></div>
        </p>
    </div>
</div>



@using PagedList.Mvc;
@model PagedList.IPagedList<Web.ModelViews.IssueView>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    var items = Model.OrderBy(t => t.Start.Value).AsEnumerable();
<div id="Today">
    <div class="card border-success">
        <div class="card-footer">
            Today
            <span class="badge badge-danger">
                @Model.Count() (issues)
            </span>
            <span class="badge badge-danger">
                @{
                    var time = Model.Sum(t => t.IssueEstimation) / 60;
                    @Html.Raw(time.ToReadable() + " (h)");
                }

            </span>
            <span class="badge badge-primary">
                @Model.Sum(t => t.Price).ToReadable() (VND)
            </span>
        </div>
    </div>
    <ul class="list-group">
        @foreach (var item in items)
    {
        if (!item.IsCompleted())
        {
            <li class="list-group-item">
                @Html.Partial("Issues/_ItemToday", item)
            </li>
    }

}
    </ul>
    <div class="panel-footer">
        @Html.PagedListPager(Model, page => Url.Action("GetTodayIssues", new { keyword = ViewBag.Keyword, page }),
                      PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
                      {
                          Display = PagedListDisplayMode.IfNeeded,
                          MaximumPageNumbersToDisplay = 5
                      },
                      new AjaxOptions
                      {
                          InsertionMode = InsertionMode.Replace,
                          HttpMethod = "Get",
                          UpdateTargetId = "Today",
                          LoadingElementId = "divProcessing"
                      }))
    </div>
</div>
}





@model PagedList.IPagedList<Web.ModelViews.IssueView>
@using PagedList.Mvc

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    var items = Model.OrderByDescending(t => t.End.Value).AsEnumerable();
    if (items != null && items.Count() > 0)
    {
<div id="issues-expired">
    <div class="card border-success">
        <div class="card-footer">
            Quá hạn
            <span class="badge badge-danger">
                @Model.Count() (issues)
            </span>
            <span class="badge badge-danger">
                @{
                    var time = Model.Sum(t => t.IssueEstimation) / 60;
                    @Html.Raw(time.ToReadable() + " (h)");
                }

            </span>
            <span class="badge badge-primary">
                @Model.Sum(t => t.Price).ToReadable() (VND)
            </span>
        </div>
    </div>
    <ul class="list-group">
        @foreach (var item in items)
        {
            <li class="list-group-item">

                @Html.Partial("Issues/_IssueItemExpired", item)
            </li>
        }
    </ul>
    <div class="panel-footer">
        @Html.PagedListPager(Model, page => Url.Action("GetExpiredIssues", new { page }),
                           PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
                           {
                               Display = PagedListDisplayMode.IfNeeded,
                               MaximumPageNumbersToDisplay = 5
                           },
                           new AjaxOptions
                           {
                               InsertionMode = InsertionMode.Replace,
                               HttpMethod = "Get",
                               UpdateTargetId = "issues-expired",
                               LoadingElementId = "divProcessing"
                           }))
    </div>
</div>
        
    }

}





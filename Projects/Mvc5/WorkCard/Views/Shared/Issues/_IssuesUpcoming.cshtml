@using PagedList.Mvc;
@model PagedList.IPagedList<Web.ModelViews.IssueView>
@using Web.ModelViews;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<div id="Upcoming">
    <div class="card border-success">
        @{
            var comingIssues = (IEnumerable<IssueView>)ViewBag.UpcomingIssues;
        <div class="card-header">
            Upcoming
            <span class="badge badge-danger">
                @comingIssues.Count()
            </span>
            <span class="badge badge-danger">
                @{
                var time = comingIssues.Sum(t => t.IssueEstimation) / 60;
                @Html.Raw(time.ToReadable() + " (h)");
                }

            </span>
            <span class="small badge badge-primary">
                @comingIssues.Sum(t => t.Price).ToReadable() (VND)
            </span>
        </div>
        }
    </div>
    <ul class="list-group">
        @foreach (var item in Model)
        {
            if (item.Status != CafeT.Objects.Enums.IssueStatus.Done)
            {
                <li class="list-group-item">
                    @Html.Partial("Issues/_ItemUpcoming", item)
                </li>
            }
        }
    </ul>
    <div class="panel-footer">
        @Html.PagedListPager(Model, page => Url.Action("GetUpcomingIssues", new { page }),
                                          PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
                                          {
                                              Display = PagedListDisplayMode.IfNeeded,
                                              MaximumPageNumbersToDisplay = 5
                                          },
                                          new AjaxOptions
                                          {
                                              InsertionMode = InsertionMode.Replace,
                                              HttpMethod = "Get",
                                              UpdateTargetId = "Upcoming",
                                              LoadingElementId = "divProcessing"
                                          }))
    </div>
</div>




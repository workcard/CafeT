@using PagedList.Mvc;
@model PagedList.IPagedList<Web.ModelViews.IssueView>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    var items = Model.OrderByDescending(t => t.End.Value).AsEnumerable();
    <div id="Upcoming">
        <div class="card border-success">
            <div class="card-header">
                Upcoming
                <span class="badge badge-danger">
                    @Model.Count() (issues)
                </span>
                <span class="badge badge-danger">
                    @{
                        var time = Model.Sum(t => t.IssueEstimation) / 60;
                        @Html.Raw(time.ToReadable() + " (h)");
                    }

                </span>
                <span class="small badge badge-primary">
                    @Model.Sum(t => t.Price).ToReadable() (VND)
                </span>
            </div>
        </div>
        <ul class="list-group">
            @foreach (var item in items)
            {
                if (item.Status != CafeT.Objects.Enums.IssueStatus.Done)
                {
                    <li class="list-group-item">
                        @Html.Partial("Issues/_ItemUpcoming", item)
                    </li>
                }
            }
        </ul>
    </div>
    <div class="panel-footer">
        @Html.PagedListPager(Model, page => Url.Action("GetUpcomingIssues", new { page }),
                                PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
                                {
                                    Display = PagedListDisplayMode.IfNeeded,
                                    MaximumPageNumbersToDisplay = 5
                                },
                                new AjaxOptions
                                {
                                    InsertionMode = InsertionMode.Replace,
                                    HttpMethod = "Get",
                                    UpdateTargetId = "issues-expired",
                                    LoadingElementId = "divProcessing"
                                }))
    </div>
}





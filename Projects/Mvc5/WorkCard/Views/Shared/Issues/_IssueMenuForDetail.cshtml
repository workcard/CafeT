@using Web.Models
@using CafeT.Objects.Enums
@model Web.ModelViews.IssueView

@if (User.Identity.IsAuthenticated)
{
    if (Model.Status != IssueStatus.Done)
    {
        <div class="col-sm-8">
            <div class="row">
                <div class="col-md-4">
                    <h4>
                        Mark as:
                    </h4>
                    <p>
                        @foreach (IssueStatus p in Enum.GetValues(typeof(IssueStatus)))
                        {
                            if (p != Model.Status)
                            {
                                @Ajax.ActionLink(p.ToString(), "MarkStatus", "WorkIssues", new { Id = Model.Id, status = p },
                                  new AjaxOptions
                                  {
                                      UpdateTargetId = "Status-" + Model.Id.ToString(),
                                      HttpMethod = "Post",
                                  }, new { @class = "btn btn-default btn-xs" })
                            }
                        }
                    </p>
                </div>
                <div class="col-md-4">
                    @Html.Raw("Set schedule: ") <br />
                    @if (Model.Repeat == ScheduleType.None)
                    {
                        foreach (ScheduleType p in Enum.GetValues(typeof(ScheduleType)))
                        {
                            if (p != Model.Repeat)
                            {
                                @Ajax.ActionLink(p.ToString(), "SetWorkOnRepeat", "WorkIssues", new { Id = Model.Id, repeat = p },
                                                            new AjaxOptions
                                                            {
                                                                UpdateTargetId = "Update-" + Model.Id.ToString(),
                                                                HttpMethod = "Post",
                                                            }, new { @class = "btn btn-default btn-xs" })
                            }
                        }
                    }
                </div>
                <div class="col-md-4">
                    @Html.Raw("Working on: ") <br />
                    @foreach (TimeTodoType p in Enum.GetValues(typeof(TimeTodoType)))
                    {
                        @Ajax.ActionLink(p.ToString(), "SetTimeTodo", "WorkIssues", new { Id = Model.Id, timeTodo = p },
                                             new AjaxOptions
                                             {
                                                 UpdateTargetId = "Status-" + Model.Id.ToString(),
                                                 HttpMethod = "Post",
                                             }, new { @class = "btn btn-default btn-xs" })

                    }
                </div>
            </div>



            <div class="row">
                @Html.Raw("Change to: ")<br />
                @foreach (MoveTimeType p in Enum.GetValues(typeof(MoveTimeType)))
                {
                    @Ajax.ActionLink(p.ToString(), "SetWorkOnTime", "WorkIssues", new { id = Model.Id, date = p },
                                                                      new AjaxOptions
                                                                      {
                                                                          UpdateTargetId = "Update-" + Model.Id.ToString(),
                                                                          HttpMethod = "Post",
                                                                      }, new { @class = "btn btn-default btn-xs" })
                }
                @if (Model.IsToday())
                {
                    @Ajax.ActionLink("Tomorrow ", "SetWorkOnTime", "WorkIssues", new { Id = Model.Id, date = DateTime.Now.AddDays(1) },
                                                        new AjaxOptions
                                                        {
                                                            UpdateTargetId = "Update-" + Model.Id.ToString(),
                                                            HttpMethod = "Post",
                                                        }, null)
                }
                @if (Model.IsTomorrow())
                {
                    @Ajax.ActionLink("Today ", "SetWorkOnTime", "WorkIssues", new { Id = Model.Id, date = DateTime.Now },
                                                        new AjaxOptions
                                                        {
                                                            UpdateTargetId = "Update-" + Model.Id.ToString(),
                                                            HttpMethod = "Post",
                                                        }, null)
                }
                @if (!Model.IsTomorrow() && !Model.IsToday())
                {
                    @Ajax.ActionLink("Today ", "SetWorkOnTime", "WorkIssues", new { Id = Model.Id, date = DateTime.Now },
                                                        new AjaxOptions
                                                        {
                                                            UpdateTargetId = "Update-" + Model.Id.ToString(),
                                                            HttpMethod = "Post",
                                                        }, null)
                    @Ajax.ActionLink("Tomorrow ", "SetWorkOnTime", "WorkIssues", new { Id = Model.Id, date = DateTime.Now.Date.AddDays(1) },
                                                        new AjaxOptions
                                                        {
                                                            UpdateTargetId = "Update-" + Model.Id.ToString(),
                                                            HttpMethod = "Post",
                                                        }, null)
                }
                @if (!Model.IsNextDay(1))
                {
                    @Ajax.ActionLink("Next Week ", "SetWorkOnTime", "WorkIssues", new { Id = Model.Id, date = DateTime.Now.Date.AddDays(7) },
                                                        new AjaxOptions
                                                        {
                                                            UpdateTargetId = "Update-" + Model.Id.ToString(),
                                                            HttpMethod = "Post",
                                                        }, null)
                }
            </div>
            <div class="row">
                @if (User.Identity.Name == Model.CreatedBy)
                {
                    @Html.ActionLink("Edit", "Edit", "WorkIssues", new { id = Model.Id }, null)
                    @Html.Raw(" | ")
                    @Html.ActionLink("Delete", "Delete", "WorkIssues", new { id = Model.Id }, null)
                }
            </div>
        </div>

    }
}
<div class="row">
    <div id="Update-@Model.Id" class="label label-info"></div>
    <div id="Status-@Model.Id" class="label label-info"></div>
</div>



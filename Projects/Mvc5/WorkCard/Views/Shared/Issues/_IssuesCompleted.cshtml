@using PagedList.Mvc
@using Web.ModelViews

@model PagedList.IPagedList<Web.ModelViews.IssueView>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
<div id="Issues">
    <div class="card border-success">
        @{
        var issues = (IEnumerable<IssueView>)ViewBag.CompletedIssues;
        <div class="card-header">
            Completed
            <span class="badge badge-danger">
                @issues.Count()
            </span>
            <span class="badge badge-danger">
                @{
                var time = issues.Sum(t => t.IssueEstimation) / 60;
                @Html.Raw(time.ToReadable() + " (h)");
                }

            </span>
            <span class="small badge badge-primary">
                @issues.Sum(t => t.Price).ToReadable() (VND)
            </span>
        </div>
        }
    </div>
    <ul class="list-group">
        @foreach (var item in Model)
        {
            <li class="list-group-item">
                @Html.Partial("Issues/_ItemCompleted", item)
            </li>
        }
    </ul>
    <div class="panel-footer">
        @Html.PagedListPager(Model, page => Url.Action("GetCompletedIssues", new { page }),
                 PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
                 {
                     Display = PagedListDisplayMode.IfNeeded,
                     MaximumPageNumbersToDisplay = 5
                 },
                 new AjaxOptions
                 {
                     InsertionMode = InsertionMode.Replace,
                     HttpMethod = "Get",
                     UpdateTargetId = "Issues",
                     LoadingElementId = "divProcessing"
                 }))
    </div>
</div>
                
}





@using Mvc5.CafeT.vn.Models;
@model Mvc5.CafeT.vn.Models.QuestionModel

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<script>
            var dt = '@ViewBag.EndDate';
            var dateAr = dt.split('-');
            var newDate = dateAr[1] + '/' + dateAr[0] + '/' + dateAr[2];

            var end = new Date(dateAr[1] + '/' + dateAr[0] + '/' + dateAr[2]);

            var _second = 1000;
            var _minute = _second * 60;
            var _hour = _minute * 60;
            var _day = _hour * 24;
            var timer;

            function showRemaining() {
                var now = new Date();
                var distance = end - now;
                if (distance < 0) {
                    clearInterval(timer);
                    document.getElementById('countdown').innerHTML = 'EXPIRED!';
                    window.location.href = '/Account/Login';

                    return;
                }
                var days = Math.floor(distance / _day);
                var hours = Math.floor((distance % _day) / _hour);
                var minutes = Math.floor((distance % _hour) / _minute);
                var seconds = Math.floor((distance % _minute) / _second);

                //document.getElementById('countdown').innerHTML = days + 'days ';
                document.getElementById('countdown').innerHTML = hours + 'hrs ';
                document.getElementById('countdown').innerHTML += minutes + 'mins ';
                document.getElementById('countdown').innerHTML += seconds + 'secs';
            }

            timer = setInterval(showRemaining, 1000);
</script>
<div>
    <h4>Question</h4>
    <hr />
    <div class="float-left">
        <h2 id="countdown"></h2>
    </div>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.CreatedDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreatedBy)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedBy)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastUpdatedDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastUpdatedDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ArticleId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ArticleId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Content)
        </dt>

        <dd>
            @Html.Raw(Model.Content)
        </dd>

    </dl>
</div>
<div class="row">
    @Ajax.ActionLink("Do exercise", "DoExercise", "Questions", new { id = Model.Id },
        new AjaxOptions
        {
            UpdateTargetId = "AjaxUpdate",
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "Get"
        }, null)

    @Ajax.ActionLink("Articles (" + Model.Answers.Count + ")", "GetAnswers", "Questions", new { id = Model.Id },
        new AjaxOptions
        {
            UpdateTargetId = "AjaxUpdate",
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "Get"
        }, null)
    
    @Ajax.ActionLink("Add Answer", "AddAnswer", "Questions", new { id = Model.Id },
        new AjaxOptions
        {
            UpdateTargetId = "AjaxUpdate",
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "Get"
        }, null)
</div>

<div id="AjaxUpdate"></div>

@Html.Partial("_UserCreateAnswer", (AnswerModel)ViewBag.AnswerCreate)
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>

@Html.Raw(Model.ToString())

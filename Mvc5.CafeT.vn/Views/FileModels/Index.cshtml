@model PagedList.IPagedList<Mvc5.CafeT.vn.Models.FileModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Sách và tài liệu";
}

@section scripts{
    <script>

        $(document).ready(function () {

            $('#btnUpload').click(function () {
                UploadFile($('#uploadFile')[0].files);
            }
            )
        });

        function UploadFileChunk(Chunk, FileName) {
            var FD = new FormData();
            FD.append('file', Chunk, FileName);
            $.ajax({
                type: "POST",
                url: "@Url.Action("UploadFileWithSplits", "FileModels")",
                contentType: false,
                processData: false,
                data: FD
            });
        }

        function UploadFile(TargetFile) {
            // create array to store the buffer chunks
            var FileChunk = [];
            // the file object itself that we will work with
            var file = TargetFile[0];
            // set up other initial vars
            var MaxFileSizeMB = 1;
            var BufferChunkSize = MaxFileSizeMB * (1024 * 1024);
            var ReadBuffer_Size = 1024;
            var FileStreamPos = 0;
            // set the initial chunk length
            var EndPos = BufferChunkSize;
            var Size = file.size;

            // add to the FileChunk array until we get to the end of the file
            while (FileStreamPos < Size) {
                // "slice" the file from the starting position/offset, to  the required length
                FileChunk.push(file.slice(FileStreamPos, EndPos));
                FileStreamPos = EndPos; // jump by the amount read
                EndPos = FileStreamPos + BufferChunkSize; // set next chunk length
            }
            // get total number of "files" we will be sending
            var TotalParts = FileChunk.length;
            var PartCount = 0;
            // loop through, pulling the first item from the array each time and sending it
            while (chunk = FileChunk.shift()) {
                PartCount++;
                // file name convention
                var FilePartName = file.name + ".part_" + PartCount + "." + TotalParts;
                // send the file
                UploadFileChunk(chunk, FilePartName);
            }
        }
    </script>
}
<script type="text/javascript">
        $.get('@Url.Action("GetGoogleDocument", "FileModels", new { n = 10})', function (data) {
            $('divFile').html(data);
        });
</script>
<div class="col-md-12">
    <div class="widget">
        <div class="widget-title">
            <h4>Sách và tài liệu</h4>
            <hr>
        </div>
        <div class="post-pager">
            <form action="/tai-lieu" method="get" role="form">
                <div class="input-group margin">
                    <input name="searchString" value="@ViewBag.Keyword" class="form-control" placeholder="Nhập từ khóa..." type="text">
                    <span class="input-group-btn">
                        <button type="submit" class="btn btn-primary btn-flat"><i class="fa fa-search"></i> Tìm!</button>
                    </span>
                </div>
            </form>
            <hr>
            <div class="list-inline">
                <h3>Điều kiện lọc</h3>
                <div class="list-item">
                    <a href="javascript:void(0);" class="btn btn-primary">Tất cả</a>
                    <a href="javascript:void(0);" class="btn btn-default">Tải nhiều</a>
                    <a href="javascript:void(0);" class="btn btn-default">Nổi bật</a>
                </div>
            </div>
            <hr>
            <div class="list-inline">
                <h3>Từ khóa: <span class="text-primary">"@ViewBag.Keyword"</span> có <span class="text-success">@ViewBag.CountFiles</span> bài viết</h3>
            </div>
        </div>
        <div class="widget searchwidget indexslider">
            <div class="col-md-12 col-sm-12 col-xs-12" style="padding: 0!important;">
                @Html.Partial("Files/_Files", Model)
            </div>
        </div>
        <div class="pagination-wrapper">
            @Html.PagedListPager(Model, page => Url.Action("Index", "FileModels", new { page }, null))
        </div>
    </div>
</div>